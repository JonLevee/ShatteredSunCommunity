@using ShatteredSunCommunity.Components.Pages
@using ShatteredSunCommunity.Models
@using ShatteredSunCommunity.UnitSelect
@using System.ComponentModel
@using ShatteredSunCommunity.UnitSelect.Definitions
@inject UnitSelectLists select
@inject UnitGroupByDefinitions definitions
@inject Models.SanctuarySunData data
@inject SelectionState selectionState
<h4>Headers</h4>
<table>
    @foreach (var row in groupings().Rows)
    {
        <tr>
            @foreach(var column in row.Columns)
            {
                <td colspan="@column.ColSpan">@column.Name</td>                
            }
        </tr>
    }

</table>
@code {
    UnitSelectListGroupedItemResult groupings() => UnitSelectListGroupCalculator.GetGroupings(definitions, select.GroupBy, data.Units);

    private void selectUpdated(object sender, EventArgs args)
    {
        base.StateHasChanged();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        selectionState.SelectionStateChanged += selectUpdated;
    }

    public void Dispose()
    {
        selectionState.SelectionStateChanged -= selectUpdated;
    }
}
